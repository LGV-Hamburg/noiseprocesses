networks:
  dev:
    name: ${DOCKER_DEV_NETWORK}
    external: true

services:
  api:
    image: ${CONTAINER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
    restart: "no"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      REDIS_CACHE_URL: "redis://redis:6379/1"
    ports:
      - 8000:8000
    command: ['uvicorn', 'app:app', '--host', '0.0.0.0', '--port', '8000']
    networks:
      - dev

  worker:
    image: ${CONTAINER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
    restart: "no"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      REDIS_CACHE_URL: "redis://redis:6379/1"
    # ports:
    #   - ${WEBAPP_PORT_CONTAINER}:${WEBAPP_PORT}
    command: ['celery', '-A', 'fastprocesses.worker.celery_app', 'worker', '--loglevel=debug']
    networks:
      - dev

  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.27.1
    expose: 
      - ${REDIS_PORT}
    restart: "unless-stopped"
    command: dragonfly --requirepass "" # --appendonly yes
    networks:
      - dev
