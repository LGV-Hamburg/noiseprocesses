networks:
  dev:
    name: ${DOCKER_DEV_NETWORK}
    external: true
volumes:
  redis_data:
    driver: local

services:
  api:
    image: ${CONTAINER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
    restart: "no"
    environment:
      FP_API_TITLE: "Noise calculation - OGC API Processes"
      FP_API_DESCRIPTION: "An OGC API Processes implementation for noise calculations."

      FP_RESULT_CACHE_HOST: "redis"
      FP_RESULT_CACHE_PORT: 6379
      FP_RESULT_CACHE_DB: 1

      FP_CELERY_BROKER_HOST: "redis"
      FP_CELERY_BROKER_PORT: 6379
      FP_CELERY_BROKER_DB: 0
      FP_CELERY_RESULTS_TTL_DAYS: 7
      FP_CELERY_TASK_TLIMIT_HARD: 1800 # 30 minutes
      FP_CELERY_TASK_TLIMIT_SOFT: 1500 # 25 minutes
      FP_RESULTS_TEMP_TTL_HOURS: 24

      FP_JOB_STATUS_TTL_DAYS: 7
      FP_SYNC_EXECUTION_TIMEOUT_SECONDS: 10
      FP_LOG_LEVEL: "DEBUG"
    ports:
      - 8000:8000
    command: ['uvicorn', 'app:app', '--host', '0.0.0.0', '--port', '8000']
    networks:
      - dev

  worker:
    image: ${CONTAINER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
    restart: "no"
    environment:
      FP_RESULT_CACHE_HOST: "redis"
      FP_RESULT_CACHE_PORT: 6379
      FP_RESULT_CACHE_DB: 1

      FP_CELERY_BROKER_HOST: "redis"
      FP_CELERY_BROKER_PORT: 6379
      FP_CELERY_BROKER_DB: 0
      FP_CELERY_RESULTS_TTL_DAYS: 7
      FP_CELERY_TASK_TLIMIT_HARD: 1800 # 30 minutes
      FP_CELERY_TASK_TLIMIT_SOFT: 1500 # 25 minutes
      FP_RESULTS_TEMP_TTL_HOURS: 24

      FP_JOB_STATUS_TTL_DAYS: 7
      FP_SYNC_EXECUTION_TIMEOUT_SECONDS: 10
      FP_LOG_LEVEL: "DEBUG"
    # ports:
    #   - ${WEBAPP_PORT_CONTAINER}:${WEBAPP_PORT}
    command: ['celery', '-A', 'fastprocesses.worker.FP_CELERY_app', 'worker', '--loglevel=debug']
    networks:
      - dev

  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.27.1
    expose: 
      - ${REDIS_PORT}
    restart: "unless-stopped"
    command: dragonfly --requirepass "" # --appendonly yes
    networks:
      - dev
    volumes:
      - redis_data:/data